# Generated by Django 3.1.3 on 2020-11-26 17:37

from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crops', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='name')),
                ('slug', models.CharField(max_length=8, unique=True, verbose_name='slug')),
                ('type', models.CharField(choices=[('MACRO', 'Macro'), ('MICRO', 'Micro')], max_length=64, verbose_name='type')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
            ],
            options={
                'verbose_name': 'nutrient',
                'verbose_name_plural': 'nutrients',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NutrientRequirement',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='amount')),
                ('harvest_index', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='harvest index')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requeriments', to='crops.crop', verbose_name='crop')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requeriments', to='nutrients.nutrient', verbose_name='nutrient')),
            ],
            options={
                'verbose_name': 'nutrient requirement',
                'verbose_name_plural': 'nutrient requirements',
            },
        ),
    ]
